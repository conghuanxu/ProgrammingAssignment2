x <- 1
print(x)
x
msg <- "hello"
msg
print(msg)
x <- c(0.5, 0.6)
x
x <- (TRUE, FALSE)
x <- c(TRUE, FALSE)
x
y <- c(1.7, "a")
y
y <- c(TRUE, 2)
y
y <- c(FALSE, 2)
y
class(y)
as.charcter(y)
as.character(y)
y
m <- matrix(nrow = 2, ncol = 3)
attributes(m)
m <- matrix(1:6, nrow = 2, ncol = 3)
m
attributes(m)
x <- data.frame(foo = 1:4, bar = c(T,T,F,F))
attributes(x)
x
m <- matrix(1:6, 2, 3)
m
x <- list(foo = 1:4, bar = 0.6)
x
x <- c(1, 2, NA)
y <- c("a", NA, "b")
good <- complete.cases(x, y)
good
x[good]
library(xlsx)
quiz2 <- read.xlsx("~/Downloads/getdata-data-DATA.gov_NGAP.xlsx",sheetIndex=1,header=TRUE)
head(quiz2)
View(quiz2)
temp <- subset(quiz2[18:23,7:15])
View(temp)
sum(temp$Zip*temp$Ext,na.rm=T)
library(XML)
quiz2 <- read.xml("~/Downloads/getdata-data-restaurants.xml",sheetIndex=1,header=TRUE)
head(quiz2)
View(quiz2)
library(XML)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
quiz2 <- xmlTreeParse(fileUrl,useInternal=TRUE)
rootNode<- xmlRoot(quiz2)
xmlName(rootNode)
install.packages(RCrul)
install.packages("RCrul")
library(XML)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
download.file(fileURL, destfile=tf <- tempfile(fileext=".xml"))
doc <- xmlParse(tf)
zip <- xpathSApply(doc, "/response/row/row/zipcode", xmlValue)
sum(zip == "21231")
quiz2 <- xmlTreeParse("~/Downloads/getdata-data-restaurants.xml",useInternal=TRUE)
rootNode<- xmlRoot(quiz2)
xmlName(rootNode)
zip <- xpathSApply(doc, "/response/row/row/zipcode", xmlValue)
zip <- xpathSApply(rootNode, "/response/row/row/zipcode", xmlValue)
sum(zip == "21231")
quiz2 <- read.csv(("~/Downloads/getdata-data-ss06pid.csv")
View(quiz2)
quiz2 <- read.csv("~/Downloads/getdata-data-ss06pid.csv")
View(quiz2)
quiz2 <- fread("~/Downloads/getdata-data-ss06pid.csv")
View(quiz2)
quiz2 <- fread.csv("~/Downloads/getdata-data-ss06pid.csv")
View(quiz2)
DT <- read.csv("~/Downloads/getdata-data-ss06pid.csv")
View(quiz2)
DT <- read.csv("~/Downloads/getdata-data-ss06pid.csv")
View(DT)
DT[,mean(pwgtp15),by=SEX]
DT <- read.table("~/Downloads/getdata-data-ss06pid.csv")
DT[,mean(pwgtp15),by=SEX]
tapply(DT$pwgtp15,DT$SEX,mean)
sapply(split(DT$pwgtp15,DT$SEX),mean)
library(data.table)
sapply(split(DT$pwgtp15,DT$SEX),mean)
library(data.table)
sapply(split(DT$pwgtp15,DT$SEX),mean)
mars$date
mars$Date
classDef@package
x <- c(1,3, 5)
y <- c(1,3, 5)
rbind(x,y)
x <- 1:4
y <- 2:3
x+y
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x > 10] <- 4
x
? load
? read
hw1_data.3 <- read.csv("~/Downloads/hw1_data-3.csv")
View(hw1_data.3)
a = hw1_data.3(Ozone=NA)
hw1_data.3
hw1_data.3(Ozone=NA)
hw1_data.3(Ozone==NA)
hw1_data.3(Ozone)
hw1_data.3(,"Ozone")
hw1_data.3("Ozone")
hw1_data.3("Ozone",)
hw1_data.3(,c("Ozone")
hw1_data.3("Ozone",)
hw1_data.3(,c("Ozone"))
a <- subset(hw1_data.3,Ozone)
a <- subset(hw1_data.3$Ozone)
a <- subset(hw1_data.3$Ozone,)
a <- subset(,1)
a <- subset[hw1_data.3$Ozone]
a <- hw1_data.3[hw1_data.3$Ozone]
a <- hw1_data.3[,1]
a
a <- a.omit
a <- na.omit(a)
a
length(a)
mean(a)
a <- subset(hw1_data.3,Ozone>31)
a <- subset(a,Temp>90)
view(a)
View(a)
colmean(a)
colMeans(a)
a <- subset(a,Month==6)
View(a)
a <- subset(hw1_data.3,Month==6)
View(a)
colMeans(a)
a <- subset(hw1_data.3,Month==5)
View(a)
example <- read.csv("http://real-chart.finance.yahoo.com/table.csv?s=MMM&a=00&b=1&c=2002&d=00&e=1&f=2006&g=d&ignore=.csv")
View(example)
plot(example$Open)
plot(example$Open,type = 'r')
plot(example$Open,type = 'l')
example.1 <- example[order(cyl)]
attach(example)
example.1 <- example[order(mpg)]
example.1 <- example[order(mpg),]
attach(example)
example[1:10,]
example[order(Date),]
example.1 <- example[order(Date),]
View(example.1)
example.1$row.names <- NULL
View(example.1)
View(example)
View(example.1)
example.1$row.names <- NULL
example.1
example.1$row.names
example.1$Date
str(example.1)
example.2 <- subset(example.1, select =- row.names)
example.2 <- example.1
View(example.2)
plot(example.1$Open)
plot(example.1$Open,type = 'l')
beforesplit <- example.1[1:439,]
aftersplit <- example.1[440:1000,]
View(beforesplit)
beforesplit$Open <- beforesplit$Open/2
View(beforesplit)
beforesplit$High <- beforesplit$High/2
beforesplit$Low <- beforesplit$Low/2
beforesplit$Close <- beforesplit$Close/2
View(beforesplit)
processedprice <- merge(beforesplit,aftersplit,by = c("Date", "Open"))
View(processedprice)
total <- rbaind(beforesplit,aftersplit)
total <- rbind(beforesplit,aftersplit)
View(total)
plot(total$Open, type = 'l')
source(calculatevolatility())
source("calculatevolatility.R")
a <- calculatevolatility()
View(a)
openprice <- log(price$Open)
openprice <- log(example.1$Open)
openprice
View(openprice)
48*21
?sqrt()
openprice[(1-1)*21+1:21*1]
openprice[(2-1)*21+1:21*2]
mean(openprice[(2-1)*21+1:21*2])
openprice[(2-1)*21+1:21*2] - mean(openprice[(2-1)*21+1:21*2])
source("calculatevolatility.R")
calculatevolatility(example.1)
vol.1 <- calculatevolatility(example.1)
source("calculatevolatility.R")
vol.1 <- calculatevolatility(example.1)
View(vol.1)
View(openprice)
source("calculatevolatility.R")
vol.1 <- calculatevolatility(example.1)
View(vol.1)
View(example.1)
View(example.2)
View(total)
source("calculatevolatility.R")
vol.1 <- calculatevolatility(total)
View(vol.1)
View(total)
View(vol.1)
log(50)
log(100)
source("calculatevolatility.R")
vol.1 <- calculatevolatility(total)
View(vol.1)
source("calculatevolatility.R")
vol.1 <- calculatevolatility(total)
View(vol.1)
source("calculatevolatility.R")
vol.1 <- calculatevolatility(total)
View(vol.1)
source("calculatevolatility.R")
vol.1 <- calculatevolatility(total)
View(total)
source("calculatevolatility.R")
vol.1 <- calculatevolatility(total)
View(vol.1)
plot(vol.1, type = 'l')
source("calculatereturn.R")
source("calculatereturn.R")
calculatereturn(total)
return <- calculatereturn(total)
View(return)
plot(return, type = 'l')
plot(return$returns, type = 'l')
plot(return$returns, type = 'l', ylim=c(-0.1, 0.1))
plot(2*return$returns, type = 'l', ylim=c(-0.1, 0.1))
par(pty="s")
plot(2*return$returns, type = 'l', ylim=c(-0.1, 0.1))
plot(return$returns, type = 'l', ylim=c(-0.1, 0.1))
plot(vol.1, type = 'l',ylim=c(0, 0.5))
par(pty="r")
?par
par(pty="m")
plot(vol.1, type = 'l',ylim=c(0, 0.5))
?inv()
?inverse()
getwd()
setwd("/Users/conghuanxu/ProgrammingAssignment2")
source("cachematrix.R")
x = rbind(c(1, -1/4), c(-1/4, 1))
m = makeCacheMatrix(x)
m$get()
cacheSolve(m)
?solve()
source("cachematrix.R")
cacheSolve(m)
cacheSolve(m)
a <- rexp(1000,0.2)
b <- var(rexp(40, 0.2)
}
b <- var(rexp(40, 0.2))
b <- var(rexp(40, 0.2))
b <- var(rexp(40, 0.2))
c <- matrix(rexp(40*1000, rate=0.2)
)
c <- matrix(rexp(40*1000, rate=0.2), 1000, 40)
View(c)
qnorm(0.975)
install.packages("pander")
install.packages("ggplot2")
replicate(100,2)
lambda <- 0.2
totnum <- 1000
samplesize <- 40
set.seed(221) ## a random number
samplemean = NULL
for (i in 1 : totnum)
samplemean = c(samplemean, mean(rexp(samplesize, lambda)))
interval <- function(lambda) {
ll <- samplemean - 1.96 * sqrt(1/lambda**2/40)
ul <- samplemean + 1.96 * sqrt(1/lambda**2/40)
(ll < 1/lambda & ul > 1/lambda)
}
coverage <- function(lambda) {
covvals <- replicate(100, interval(lambda))
mean(covvals)
}
simres <- replicate(100, coverage(lambda))
lambda_vals <- seq(4, 6, by=0.01)
coverage <- sapply(lambda_vals, function(lamb) {
mu_hats <- rowMeans(matrix(rexp(40*1000, rate=0.2),
1000, 40))
ll <- mu_hats - qnorm(0.975) * sqrt(1/lambda**2/40)
ul <- mu_hats + qnorm(0.975) * sqrt(1/lambda**2/40)
mean(ll < lamb & ul > lamb)
})
View(coverage)
coverage <- sapply(lambda_vals, function(lamb) {
ll <- samplemean - qnorm(0.975) * sqrt(1/lambda**2/40)
ul <- samplemean + qnorm(0.975) * sqrt(1/lambda**2/40)
mean(ll < lamb & ul > lamb)
})
?round()
library(datasets)
data <- ToothGrowth
View(data)
View(data)
View(data)
